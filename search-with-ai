#!/opt/homebrew/bin/python3
import sys,os,json
import numpy as np
import chromadb
from langchain_community.vectorstores import Chroma
from langchain_openai import OpenAIEmbeddings
from openai import OpenAI
from common import wrap, bold, get_query, heading
query = get_query()

if 'OPENAI_API_KEY' not in os.environ and 'OPEN_AI_KEY' in os.environ:
 os.environ['OPENAI_API_KEY'] = os.environ['OPEN_AI_KEY']

client = OpenAI()

def get_ai_query(text):
 try:
  answer = client.chat.completions.create(
    messages=[
        {
            "role": "user",
            "content": f"""
If the following text doesn't look like a question, replace words to match a likely LDS scripture. 

For example, if the text is "adam sinned so we could be happy" 
respond with "adam fell that men might be men are that they might have joy."  

If the text looks like a question try to answer the question with the text of multiple LDS scriptures. 

For example,if the question is: "what are some scriptures that celbrate the glory of motherhood"

answer with

strength and honour are her clothing; and she shall rejoice in time to come.
because she was the mother of all living;
thou art an elect lady, whom I have called
they had been taught by their mothers, that if they did not doubt, God would deliver them.

Here is the text: {text}""",
        }
    ],
    model="gpt-4-turbo",
  )
  return answer.choices[0].message.content
 except Exception as e:
  print(f"An error occurred: {e}")
  return None

aiquery = get_ai_query(query)
heading(aiquery)

db = Chroma(embedding_function=OpenAIEmbeddings(),persist_directory="scriptures_db")
for doc,score in db.similarity_search_with_relevance_scores(aiquery,k=10):
  print(json.dumps({
    'score':score,
    'content':doc.page_content,
    'meta':doc.metadata
    },
    indent=2,
    ensure_ascii=False))

